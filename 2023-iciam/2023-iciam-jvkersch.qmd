---
title: "Feedback Integrators for Mechanical Systems with Holonomic Constraints"
author: Joris Vankerschaver
format:
  revealjs:
    theme: [default, custom.scss]
    slide-number: true
    css: style.css
filters:
  - shinylive      
---

## Introduction

Work done in collaboration with **Dong Eui Chang** (KAIST, Korea) and **Matthew Perlmutter** (Universidade Federal de Minas Gerais, Brazil)

![](./images/dongandmatt.png){fig-align=center}

Published as *Feedback Integrators for Mechanical Systems with Holonomic Constraints*, D. E. Chang, M. Perlmutter, J. Vankerschaver. Sensors 22, no. 17 (2022).


## Ghent University Global Campus

- Located in Incheon, at the heart of the Songdo bio cluster
- Campus of Ghent University (Belgium) focused on life sciences
- 15-20 faculty, 40-50 PhD students, 400-500 students

![](./images/campus.png){fig-align="center"}


## What are feedback integrators?

Ingredients:

- Dynamical system $\dot{x} = X(x)$
- Conserved quantity $V(x(t)) = 0$

**Problem**: Numerical dynamics will drift away from $V^{-1}(0)$.

**Feedback approach**: Make $V^{-1}(0)$ into an **attracting** invariant manifold (approximately conserved).

![](./images/unconstrained.svg){fig-align=center height=150}


## How are feedback integrators implemented?

![](./images/restoring-vector-field.png){.absolute top=130 right=0}

Add **restoring force** and consider

![](./images/annotated-feedback.png)

Under modest assumptions,

- $\nabla V(x)$ pulls dynamics back to $V^{-1}(0)$
- Dynamics on $V^{-1}(0)$ are not changed

Now, use **any standard integrator** to numerically integrate the modified vector field.


## Example: feedback equations for the simple pendulum

![](./images/pendulum.png){.absolute top=120 right=0 height=60%}

Conserved quantity:
$$
    V = \frac{1}{2} \Big(H(q, p) - H(q_0, p_0)\Big)^2
$$
with $H(q, p) = \frac{1}{2} p^2 - \cos(q)$ the Hamiltonian.


Feedback dynamics:

![](./images/annotated-pendulum.svg){fig-align=center}

## Integrating the feedback equations

```{python}
#| echo: false
#| fig-align: center
%run scripts/example.py

```

Feedback Euler = forward Euler applied to feedback equations. Comparable behavior to Stormer-Verlet.



## What about constrained dynamics?

Suppose that we have $2k$ holonomic constraints $f_j(x) = 0$.

- The Hamiltonian flow $X_H$ will in general not leave the constraint surface invariant.
- Dirac showed us how to modify the dynamics so that the constraints are preserved.

![](./images/constraint-projection.png){width=400}
![](./images/annotated-dirac.png){fig-align=center height=150}

## Applying the feedback method to constrained dynamics

- The continuous dynamics leaves the constraints invariant.
- Numerically, the dynamics will drift off the constraint surface.

Add **feedback forces** to attract the dynamics back to the constraint surface:


![](./images/annotated-feedback-dirac.png){fig-align=center height=150}


## Example: the spherical pendulum

![](./images/annotated-eom.png)

4 conserved quantities to consider:

- Constraints: unit length ($k_1$) and velocity tangent to sphere ($k_2$)
- Conservation of energy ($k_3$) and angular momentum ($k_4$)

Just a big vector field...

## Feedback Euler captures pendulum dynamics

![](./images/threeD.png)

## Feedback Euler approximately preserves constraints

![](./images/error-f1.png) 

## Feedback Euler approximately preserves energy

![](./images/error-H.png)

## Budget

![](./images/error-vs-budget.png)


## Take-away messages

- The feedback methos

Is it more accurate than a custom integrator? **No**

Is it more versatile than any specific integrator? **Yes**


straightforward modification of force field


##

```{python}
#| echo: false
#| output: asis

from helpers import include_shiny_folder
include_shiny_folder("feedback-integrators")
    
```



## Thank you

Summarize key points


Add reference
